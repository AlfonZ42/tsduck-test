
Test tool for TSDuck XML manipulation

Usage: tsxml [options] [input-file ...]

Any input XML file name can be replaced with "inline XML content", starting
with "<?xml".

Parameters:

  Specify the list of input files. If any is specified as '-', the standard
  input is used.

Options:

  -c
  --channel
      A shortcut for '--model tsduck.channels.model.xml'. It verifies that the
      input files are valid channel configuration files.

  -d[level]
  --debug[=level]
      Produce debug traces. The default level is 1. Higher levels produce more
      messages.

  --help
      Display this help text.

  -h
  --hf-band
      A shortcut for '--model tsduck.hfbands.model.xml'. It verifies that the
      input files are valid HF bands definition files.

  -i value
  --indent value
      Specify the indentation size of output files. The default is 2.

  -j
  --json
      Perform an automated XML-to-JSON conversion. The output file is in JSON
      format instead of XML.

  --json-line[='prefix']
      Same as --json but report the JSON text as one single line in the message
      logger instead of the output file. The optional string parameter
      specifies a prefix to prepend on the log line before the JSON text to
      locate the appropriate line in the logs.

  -l
  --lnb
      A shortcut for '--model tsduck.lnbs.model.xml'. It verifies that the
      input files are valid satellite LNB definition files.

  -m filename
  --model filename
      Specify an XML model file which is used to validate all input files.

  -o filename
  --output filename
      Specify the name of the output file (standard output by default). An
      output file is produced only if --patch, --reformat or --json are
      specified.

  -p filename
  --patch filename
      Specify an XML patch file. All operations which are specified in this
      file are applied on each input file. Several --patch options can be
      specified. Patch files are sequentially applied on each input file.

  -r
  --reformat
      Reformat the input XML files according to the default XML layout for
      TSDuck XML files. This option is useful to generate an expected output
      file format. If more than one input file is specified, they are all
      reformatted in the same output file.

  --strict-xml
      Save XML documents in strictly conformant XML format. By default, do not
      escape characters when this is not syntactically necessary to make the
      XML text more human-readable.

  -t
  --tables
      A shortcut for '--model tsduck.tables.model.xml'. It verifies that the
      input files are valid PSI/SI tables files.

  -v
  --verbose
      Produce verbose output.

  --version
      Display the TSDuck version number.

  --x2j-collapse-text
      In the XML-to-JSON conversion, remove leading and trailing spaces and
      replace all other sequences of space characters by one single space in
      all text nodes. By default, text nodes are collapsed only when there is
      an XML model which identifies the text node as containing hexadecimal
      content.

  --x2j-enforce-boolean
      In the XML-to-JSON conversion, when an element attribute contains a
      boolean value but there is no XML model file to tell if this is really a
      boolean, force the creation of a JSON boolean. By default, when there is
      no XML model, all element attributes are converted as JSON strings.

  --x2j-enforce-integer
      In the XML-to-JSON conversion, when an element attribute contains an
      integer value but there is no XML model file to tell if this is really an
      integer, force the creation of a JSON number. By default, when there is
      no XML model, all element attributes are converted as JSON strings.

  --x2j-include-root
      In the XML-to-JSON conversion, keep the root of the XML document as a
      JSON object. By default, the JSON document is made of an array of all XML
      elements under the root.

  --x2j-trim-text
      In the XML-to-JSON conversion, remove leading and trailing spaces in all
      text nodes. By default, text nodes are trimmed only when there is an XML
      model which identifies the text node as containing hexadecimal content.

  --xml-line[='prefix']
      Log each table as one single XML line in the message logger instead of an
      output file. The optional string parameter specifies a prefix to prepend
      on the log line before the XML text to locate the appropriate line in the
      logs.

